function [dispParams,frames,stickPos] = ADCalcDisplayParams(offlineData,params)
%This function defines dafault parametrs to be used when displaying
%offlines results.
%inputs -   offlineData is a 2X1 cell of structs containing all recorded
%           data.
%           params is the paramas struct used when offlineData was recorded.
%outputs -  dispParams is a struct containing display paramters.
%           frames is a cell of frames diaplayed - currently using camera1.
%           stickPos is an Mx3xstickNum array of stickNum sticks positions.

%% Define default values
frames      = [];
stickPos    = [];

dispParams.numS         = length(offlineData);
dispParams.numD         = params.numOfDrums;
dispParams.drumR        = params.drumR;
dispParams.method       = 'stem';
dispParams.trLength     = 3;
dispParams.colors       = {'r','b','y'};
dispParams.fps          = 24;

%% Create frames and stickPos arrays
for s = 1:dispParams.numS %stick loop
    for posInd = 1:length(offlineData{s}) %pos loop
        if offlineData{s}(posInd).found
            stickPos(posInd,:,s) = [offlineData{s}(posInd).x offlineData{s}(posInd).y offlineData{s}(posInd).shift];
        else
            stickPos(posInd,:,s) = nan(1,3);
        end
        frames{posInd} = offlineData{1}(posInd).frame;
%         frames{posInd} = imrotate(offlineData{1}(posInd).frame,180);
        for dim = 1:3
            frames{posInd}(:,:,dim) = flip(frames{posInd}(:,:,dim),1);
        end
    end %end pos loop
end %end stick loop

%% Fix orientation
for s = 1:dispParams.numS %stick loop
    for posInd = 1:length(offlineData{s}) %pos loop
        
    end


end
                    
%% Calculate image bounds
thZ     = 10;
Zvals   = squeeze(stickPos(:,3,:));
Zvals   = Zvals(~isnan(Zvals));
[Ybound,Xbound, ~]  = size(frames{1}); 
medZ                = median(Zvals);
Zbounds             = [medZ - thZ medZ + thZ];
dispParams.bounds   = [1 Xbound 1 Ybound Zbounds];

%% Define alphaValues for transperacy
dispParams.alphaValues = linspace(0,1,dispParams.trLength);

end

